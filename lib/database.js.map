{"version":3,"sources":["../src/database.js"],"names":["promisifyAll","RedisClient","prototype","Multi","Database","constructor","options","undefined","key","client","createClient","addPoint","uid","point","data","JSON","stringify","zaddAsync","addPoints","points","multi","forEach","zadd","bind","execAsync","maxSyncNumber","zrevrangeAsync","then","members","pointsAtRange","minValue","maxValue","zrangebyscoreAsync","pointTuples","chunk","map","tuple","parse"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAGA;;;;;;AAFA,mBAASA,YAAT,CAAsB,gBAAMC,WAAN,CAAkBC,SAAxC;AACA,mBAASF,YAAT,CAAsB,gBAAMG,KAAN,CAAYD,SAAlC;AAGe,MAAME,QAAN,CAAc;AACzBC,gBAAYC,OAAZ,EAAoB;AAChB,YAAGA,WAAWC,SAAd,EAAwB;AACpBD,sBAAU,EAAV;AACH;AACD,aAAKE,GAAL,GAAWF,QAAQ,OAAR,KAAoB,QAA/B;AACA,aAAKG,MAAL,GAAc,gBAAMC,YAAN,CAAmBJ,OAAnB,CAAd;AACH;;AAEDK,aAASC,GAAT,EAAcC,KAAd,EAAoB;AAChB,YAAIC,OAAOC,KAAKC,SAAL,CAAeH,MAAM,MAAN,CAAf,CAAX;AACA,eAAO,KAAKJ,MAAL,CAAYQ,SAAZ,CAAuB,GAAE,KAAKT,GAAI,IAAGI,GAAI,EAAzC,EAA4CC,MAAM,YAAN,CAA5C,EAAiEC,IAAjE,CAAP;AACH;;AAEDI,cAAUN,GAAV,EAAeO,MAAf,EAAsB;AAClB,YAAIC,QAAQ,KAAKX,MAAL,CAAYW,KAAZ,EAAZ;AACA,yBAAEC,OAAF,CAAUF,MAAV,EAAkB,UAASN,KAAT,EAAe;AAC7B,gBAAIC,OAAOC,KAAKC,SAAL,CAAeH,MAAM,MAAN,CAAf,CAAX;AACAO,kBAAME,IAAN,CAAY,GAAE,KAAKd,GAAI,IAAGI,GAAI,EAA9B,EAAiCC,MAAM,YAAN,CAAjC,EAAsDC,IAAtD;AACH,SAHiB,CAGhBS,IAHgB,CAGX,IAHW,CAAlB;AAIA,eAAOH,MAAMI,SAAN,EAAP;AACH;;AAEDC,kBAAcb,GAAd,EAAkB;AACd,eAAO,KAAKH,MAAL,CAAYiB,cAAZ,CAA4B,GAAE,KAAKlB,GAAI,IAAGI,GAAI,EAA9C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,YAAvD,EAAqEe,IAArE,CAA0E,UAASC,OAAT,EAAiB;AAC9F,gBAAGA,WAAWrB,SAAd,EAAwB;AACpB,uBAAOqB,QAAQ,CAAR,CAAP;AACH;AACD,mBAAO,CAAP;AACH,SALM,CAAP;AAMH;;AAEDC,kBAAcjB,GAAd,EAAmBkB,QAAnB,EAA6BC,QAA7B,EAAsC;AAClC,eAAO,KAAKtB,MAAL,CAAYuB,kBAAZ,CAAgC,GAAE,KAAKxB,GAAI,IAAGI,GAAI,EAAlD,EAAqDkB,QAArD,EAA+DC,QAA/D,EAAyE,YAAzE,EAAuFJ,IAAvF,CAA4F,UAASC,OAAT,EAAiB;AAChH,gBAAIK,cAAc,iBAAEC,KAAF,CAAQN,OAAR,EAAiB,CAAjB,CAAlB;AACA,gBAAIT,SAAS,iBAAEgB,GAAF,CAAMF,WAAN,EAAmB,UAASG,KAAT,EAAe;AAC3C,uBAAO;AACH,kCAAcA,MAAM,CAAN,CADX;AAEH,4BAAQrB,KAAKsB,KAAL,CAAWD,MAAM,CAAN,CAAX;AAFL,iBAAP;AAIH,aALY,CAAb;AAMA,mBAAOjB,MAAP;AACH,SATM,CAAP;AAUH;AA3CwB;kBAARf,Q","file":"database.js","sourcesContent":["import redis from 'redis';\nimport bluebird from 'bluebird';\nbluebird.promisifyAll(redis.RedisClient.prototype);\nbluebird.promisifyAll(redis.Multi.prototype);\nimport _ from 'lodash';\n\nexport default class Database{\n    constructor(options){\n        if(options == undefined){\n            options = {};\n        }\n        this.key = options['dbkey'] || 'points';\n        this.client = redis.createClient(options);\n    }\n\n    addPoint(uid, point){\n        let data = JSON.stringify(point['data']);\n        return this.client.zaddAsync(`${this.key}:${uid}`, point['syncNumber'], data);\n    }\n\n    addPoints(uid, points){\n        let multi = this.client.multi();\n        _.forEach(points, function(point){\n            let data = JSON.stringify(point['data']);\n            multi.zadd(`${this.key}:${uid}`, point['syncNumber'], data);\n        }.bind(this));\n        return multi.execAsync();\n    }\n\n    maxSyncNumber(uid){\n        return this.client.zrevrangeAsync(`${this.key}:${uid}`, 0, 0, 'withscores').then(function(members){\n            if(members != undefined){\n                return members[1];\n            }\n            return 0;\n        });\n    }\n\n    pointsAtRange(uid, minValue, maxValue){\n        return this.client.zrangebyscoreAsync(`${this.key}:${uid}`, minValue, maxValue, 'withscores').then(function(members){\n            let pointTuples = _.chunk(members, 2);\n            let points = _.map(pointTuples, function(tuple){\n                return {\n                    'syncNumber': tuple[1],\n                    'data': JSON.parse(tuple[0])\n                }\n            });\n            return points;\n        });\n    }\n}"]}