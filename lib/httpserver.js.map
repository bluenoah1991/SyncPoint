{"version":3,"sources":["../src/httpserver.js"],"names":["HttpServer","constructor","options","undefined","longPollings","scopePool","httpPack","server","router","installRoute","syncCallback","use","buffer","routes","allowedMethods","listen","post","outgoingHandle","bind","incomingHandle","registerSyncCallback","cb","notifyNewNumberOfSegment","uid","number","notifyData","respondBody","JSON","stringify","scopes","livingNodes","forEach","scope","commit","Buffer","nodes","username","keys","map","node","authenticate","ctx","headers","length","split","next","throw","longPolling","destroy","start","request","then","body","parseBody","payload","syncData","parse","syncId","clientNumberOfSegment","newPoints","respondSyncData","data"],"mappings":"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","file":"httpserver.js","sourcesContent":["import _ from 'lodash';\n\nimport Koa from 'koa';\nimport Router from 'koa-router';\nimport cors from 'kcors';\nimport body from 'koa-better-body';\nimport {HttpPack} from 'httppack-server';\n\nimport LongPolling from './longpolling';\n\nexport default class HttpServer{\n    constructor(options){\n        if(options == undefined){\n            options = {};\n        }\n        this.options = options;\n        this.longPollings = {};\n        this.scopePool = {};\n        this.httpPack = new HttpPack(options);\n        this.server = new Koa();\n        this.router = new Router();\n        this.installRoute();\n\n        this.syncCallback = function(){};\n\n        this.server\n            .use(cors())\n            .use(body({ buffer: true }))\n            .use(this.router.routes())\n            .use(this.router.allowedMethods());\n    }\n\n    listen(){\n        this.server.listen(this.options['httpport'] || 3000);\n    }\n\n    installRoute(){\n        this.router.post(this.options['outgoing_address'] || '/outgoing', this.outgoingHandle.bind(this));\n        this.router.post(this.options['incoming_address'] || '/incoming', this.incomingHandle.bind(this));\n    }\n\n    registerSyncCallback(cb){\n        this.syncCallback = cb;\n    }\n\n    notifyNewNumberOfSegment(uid, number){\n        let notifyData = {\n            \"newNumberOfSegment\": number\n        };\n        let respondBody = JSON.stringify(notifyData);\n        let scopes = this.livingNodes(uid);\n        _.forEach(scopes, function(scope){\n            this.httpPack.commit(scope, new Buffer(respondBody, 'utf-8'), 1);\n        }.bind(this));\n    }\n\n    livingNodes(uid){\n        let nodes = this.scopePool[uid];\n        if(nodes == undefined){\n            nodes = {};\n            this.scopePool[username] = nodes;\n        }\n        nodes = _.keys(nodes);\n        return _.map(nodes, function(node){\n            return `${uid}:${node}`;\n        });\n    }\n\n    authenticate(ctx){\n        let scope = ctx.headers['syncpoint-scope'];\n        if(scope == undefined || scope.length == 0){\n            return [scope, null, null];\n        }\n        let [username, node] = scope.split(':');\n        let nodes = this.scopePool[username];\n        if(nodes == undefined){\n            nodes = {};\n            this.scopePool[username] = nodes;\n        }\n        nodes[node] = true;\n        return [scope, username, node];\n    }\n\n    outgoingHandle(ctx, next){\n        let [scope, uid, node] = this.authenticate(ctx);\n        if(scope == undefined || scope.length == 0){\n            ctx.throw(401);\n        } else if(uid == undefined || scope.length == 0){\n            ctx.throw(401);\n        } else if(node == undefined || scope.length == 0){\n            ctx.throw(401);\n        }\n        let longPolling = this.longPollings[scope];\n        if(longPolling != undefined){\n            longPolling.destroy();\n        }\n        longPolling = new LongPolling(this.httpPack, scope);\n        this.longPollings[scope] = longPolling;\n        longPolling.start(ctx);\n        return next();\n    }\n\n    incomingHandle(ctx, next){\n        let [scope, uid, node] = this.authenticate(ctx);\n        if(scope == undefined || scope.length == 0){\n            ctx.throw(401);\n        }\n        return ctx.request.buffer().then(function(body){\n            return this.httpPack.parseBody(scope, body, function(scope, payload){\n                let syncData = JSON.parse(payload);\n                if(syncData != undefined){\n                    let syncId = syncData['id'];\n                    let clientNumberOfSegment = syncData['clientNumberOfSegment'];\n                    let newPoints = syncData['newPoints'];\n                    let respondSyncData = this.syncCallback(\n                        uid, syncId, clientNumberOfSegment, newPoints);\n                    respondSyncData.then(function(data){\n                        if(data != undefined){\n                            let respondBody = JSON.stringify(data);\n                            this.httpPack.commit(scope , new Buffer(respondBody, 'utf-8'), 2);\n                        }\n                    }.bind(this));\n                }\n            }.bind(this)).then(function(){\n                ctx.body = null;\n                return next();\n            }.bind(this));\n        }.bind(this));\n    }\n}"]}